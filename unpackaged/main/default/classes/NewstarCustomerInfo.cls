/*
 * Constellation SFDC Integration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * Represents customer information data record with key personal information.
 */
public class NewstarCustomerInfo {
    /**
     * Unique ID of the customer in NEWSTAR Sales.
     * @return id
     */
    public Integer id { get; set; }

    /**
     * ID of the sales office that the customer record belongs to in NEWSTAR Sales.
     * @return salesOfficeId
     */
    public Integer salesOfficeId { get; set; }

    /**
     * First name of the customer.
     * @return firstName
     */
    public String firstName { get; set; }

    /**
     * Last name of the customer.
     * @return lastName
     */
    public String lastName { get; set; }

    /**
     * Street line 1 part customer\'s address.
     * @return streetAddress1
     */
    public String streetAddress1 { get; set; }

    /**
     * Street line 2 part customer\'s address.
     * @return streetAddress2
     */
    public String streetAddress2 { get; set; }

    /**
     * City part of the customer\'s  address.
     * @return city
     */
    public String city { get; set; }

    /**
     * ID of the state/province part of the customer\'s address.
     * @return stateProvinceId
     */
    public Integer stateProvinceId { get; set; }

    /**
     * ZIP/Postal code part of the customer\'s address.
     * @return zipPostalCode
     */
    public String zipPostalCode { get; set; }

    /**
     * Home email address.
     * @return homeEmail
     */
    public String homeEmail { get; set; }

    /**
     * Work email address.
     * @return workEmail
     */
    public String workEmail { get; set; }

    /**
     * Home phone number.
     * @return homePhone
     */
    public String homePhone { get; set; }

    /**
     * Work phone number.
     * @return workPhone
     */
    public String workPhone { get; set; }

    /**
     * Mobile phone number.
     * @return mobilePhone
     */
    public String mobilePhone { get; set; }

    /**
     * Flag indicating if the customer record is archived.
     * @return isArchived
     */
    public Boolean isArchived { get; set; }

    /**
     * Flag indicating if the customer record is opted out in NEWSTAR Sales.
     * @return isOptOut
     */
    public Boolean isOptOut { get; set; }

    /**
     * Date/time stamp of the customer\'s record last update.
     * @return lastModifiedDate
     */
    public Datetime lastModifiedDate { get; set; }

    /**
     * ID of the NEWSTAR Sales user to associate the prospect with.
     * @return salesAgentId
     */
    public Integer salesAgentId { get; set; }

    /**
     * ID of the real estate agent optionally associated with this deal.
     * @return realEstateAgentId
     */
    public Integer realEstateAgentId { get; set; }

    /**
     * List of customer-lot associations that were/are lot reservations, selections, contracts and closings.
     * @return lotAssociations
     */
    public List<NewstarCustomerLotAssociationInfo> lotAssociations { get; set; }

    /**
     * CoBuyers for whom the lot reservation is made for.
     * @return coBuyers
     */
    public List<NewstarCoBuyer> coBuyers { get; set; }

    public NewstarCustomerInfo() {
        lotAssociations = new List<NewstarCustomerLotAssociationInfo>();
        coBuyers = new List<NewstarCoBuyer>();
    }

   public static NewstarCustomerInfo getExample() {
        NewstarCustomerInfo customerInfo = new NewstarCustomerInfo();
          customerInfo.id = 0;
          customerInfo.salesOfficeId = 0;
          customerInfo.firstName = '';
          customerInfo.lastName = '';
          customerInfo.streetAddress1 = '';
          customerInfo.streetAddress2 = '';
          customerInfo.city = '';
          customerInfo.stateProvinceId = 0;
          customerInfo.zipPostalCode = '';
          customerInfo.homeEmail = '';
          customerInfo.workEmail = '';
          customerInfo.homePhone = '';
          customerInfo.workPhone = '';
          customerInfo.mobilePhone = '';
          customerInfo.isArchived = true;
          customerInfo.isOptOut = true;
          customerInfo.lastModifiedDate = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          customerInfo.salesAgentId = 0;
          customerInfo.realEstateAgentId = 0;
          customerInfo.lotAssociations = new List<NewstarCustomerLotAssociationInfo>{NewstarCustomerLotAssociationInfo.getExample()};
          customerInfo.coBuyers = new List<NewstarCoBuyer>{NewstarCoBuyer.getExample()};
        return customerInfo;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof NewstarCustomerInfo) {           
            NewstarCustomerInfo customerInfo = (NewstarCustomerInfo) obj;
            return this.id == customerInfo.id
                && this.salesOfficeId == customerInfo.salesOfficeId
                && this.firstName == customerInfo.firstName
                && this.lastName == customerInfo.lastName
                && this.streetAddress1 == customerInfo.streetAddress1
                && this.streetAddress2 == customerInfo.streetAddress2
                && this.city == customerInfo.city
                && this.stateProvinceId == customerInfo.stateProvinceId
                && this.zipPostalCode == customerInfo.zipPostalCode
                && this.homeEmail == customerInfo.homeEmail
                && this.workEmail == customerInfo.workEmail
                && this.homePhone == customerInfo.homePhone
                && this.workPhone == customerInfo.workPhone
                && this.mobilePhone == customerInfo.mobilePhone
                && this.isArchived == customerInfo.isArchived
                && this.isOptOut == customerInfo.isOptOut
                && this.lastModifiedDate == customerInfo.lastModifiedDate
                && this.salesAgentId == customerInfo.salesAgentId
                && this.realEstateAgentId == customerInfo.realEstateAgentId
                && this.lotAssociations == customerInfo.lotAssociations
                && this.coBuyers == customerInfo.coBuyers;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (salesOfficeId == null ? 0 : System.hashCode(salesOfficeId));
        hashCode = (17 * hashCode) + (firstName == null ? 0 : System.hashCode(firstName));
        hashCode = (17 * hashCode) + (lastName == null ? 0 : System.hashCode(lastName));
        hashCode = (17 * hashCode) + (streetAddress1 == null ? 0 : System.hashCode(streetAddress1));
        hashCode = (17 * hashCode) + (streetAddress2 == null ? 0 : System.hashCode(streetAddress2));
        hashCode = (17 * hashCode) + (city == null ? 0 : System.hashCode(city));
        hashCode = (17 * hashCode) + (stateProvinceId == null ? 0 : System.hashCode(stateProvinceId));
        hashCode = (17 * hashCode) + (zipPostalCode == null ? 0 : System.hashCode(zipPostalCode));
        hashCode = (17 * hashCode) + (homeEmail == null ? 0 : System.hashCode(homeEmail));
        hashCode = (17 * hashCode) + (workEmail == null ? 0 : System.hashCode(workEmail));
        hashCode = (17 * hashCode) + (homePhone == null ? 0 : System.hashCode(homePhone));
        hashCode = (17 * hashCode) + (workPhone == null ? 0 : System.hashCode(workPhone));
        hashCode = (17 * hashCode) + (mobilePhone == null ? 0 : System.hashCode(mobilePhone));
        hashCode = (17 * hashCode) + (isArchived == null ? 0 : System.hashCode(isArchived));
        hashCode = (17 * hashCode) + (isOptOut == null ? 0 : System.hashCode(isOptOut));
        hashCode = (17 * hashCode) + (lastModifiedDate == null ? 0 : System.hashCode(lastModifiedDate));
        hashCode = (17 * hashCode) + (salesAgentId == null ? 0 : System.hashCode(salesAgentId));
        hashCode = (17 * hashCode) + (realEstateAgentId == null ? 0 : System.hashCode(realEstateAgentId));
        hashCode = (17 * hashCode) + (lotAssociations == null ? 0 : System.hashCode(lotAssociations));
        hashCode = (17 * hashCode) + (coBuyers == null ? 0 : System.hashCode(coBuyers));
        return hashCode;
    }
}