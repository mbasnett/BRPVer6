/*
 * Constellation SFDC Integration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * Represents an individual option selected by the customer as an upgrade\r\nor included by the builder as standard.
 */
public class NewstarHomeOptionInfo {
    /**
     * Unique ID of the option.
     * @return id
     */
    public Integer id { get; set; }

    /**
     * Internal code of the contract addendum that the option belongs to.
     * @return addendumCode
     */
    public String addendumCode { get; set; }

    /**
     * Name/description of the contract addendum that the option belongs to.
     * @return addendumDescription
     */
    public String addendumDescription { get; set; }

    /**
     * Sequential code of the option item.
     * @return itemCode
     */
    public String itemCode { get; set; }

    /**
     * NEWSTAR product code representing the option in the product catalog.
     * @return productCode
     */
    public String productCode { get; set; }

    /**
     * Actual description of the item.
     * @return description
     */
    public String description { get; set; }

    /**
     * Name of the first product attribute (if applicable).
     * @return attribute1Name
     */
    public String attribute1Name { get; set; }

    /**
     * Value of the first product attribute (if applicable).
     * @return attribute1Value
     */
    public String attribute1Value { get; set; }

    /**
     * Name of the second product attribute (if applicable).
     * @return attribute2Name
     */
    public String attribute2Name { get; set; }

    /**
     * Value of the second product attribute (if applicable).
     * @return attribute2Value
     */
    public String attribute2Value { get; set; }

    /**
     * Unit price of the item.
     * @return unitPrice
     */
    public Double unitPrice { get; set; }

    /**
     * Quantity of the item purchased by the customer or included with the home.
     * @return quantity
     */
    public Double quantity { get; set; }

    /**
     * Total amount charged for the item, including incentives.
     * @return amount
     */
    public Double amount { get; set; }

    /**
     * Sales agent notes pertaining ot the option sold.
     * @return notes
     */
    public String notes { get; set; }

    /**
     * Code for the unit of measure used to sell the option item.
     * @return unitOfMeasureCode
     */
    public String unitOfMeasureCode { get; set; }

    /**
     * Name for the unit of measure used to sell the option item.
     * @return unitOfMeasureName
     */
    public String unitOfMeasureName { get; set; }

    /**
     * Flag indicting whether the option is included into the base house offering for this sale.
     * @return isIncluded
     */
    public Boolean isIncluded { get; set; }

   public static NewstarHomeOptionInfo getExample() {
        NewstarHomeOptionInfo homeOptionInfo = new NewstarHomeOptionInfo();
          homeOptionInfo.id = 0;
          homeOptionInfo.addendumCode = '';
          homeOptionInfo.addendumDescription = '';
          homeOptionInfo.itemCode = '';
          homeOptionInfo.productCode = '';
          homeOptionInfo.description = '';
          homeOptionInfo.attribute1Name = '';
          homeOptionInfo.attribute1Value = '';
          homeOptionInfo.attribute2Name = '';
          homeOptionInfo.attribute2Value = '';
          homeOptionInfo.unitPrice = 1.3579;
          homeOptionInfo.quantity = 1.3579;
          homeOptionInfo.amount = 1.3579;
          homeOptionInfo.notes = '';
          homeOptionInfo.unitOfMeasureCode = '';
          homeOptionInfo.unitOfMeasureName = '';
          homeOptionInfo.isIncluded = true;
        return homeOptionInfo;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof NewstarHomeOptionInfo) {           
            NewstarHomeOptionInfo homeOptionInfo = (NewstarHomeOptionInfo) obj;
            return this.id == homeOptionInfo.id
                && this.addendumCode == homeOptionInfo.addendumCode
                && this.addendumDescription == homeOptionInfo.addendumDescription
                && this.itemCode == homeOptionInfo.itemCode
                && this.productCode == homeOptionInfo.productCode
                && this.description == homeOptionInfo.description
                && this.attribute1Name == homeOptionInfo.attribute1Name
                && this.attribute1Value == homeOptionInfo.attribute1Value
                && this.attribute2Name == homeOptionInfo.attribute2Name
                && this.attribute2Value == homeOptionInfo.attribute2Value
                && this.unitPrice == homeOptionInfo.unitPrice
                && this.quantity == homeOptionInfo.quantity
                && this.amount == homeOptionInfo.amount
                && this.notes == homeOptionInfo.notes
                && this.unitOfMeasureCode == homeOptionInfo.unitOfMeasureCode
                && this.unitOfMeasureName == homeOptionInfo.unitOfMeasureName
                && this.isIncluded == homeOptionInfo.isIncluded;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (addendumCode == null ? 0 : System.hashCode(addendumCode));
        hashCode = (17 * hashCode) + (addendumDescription == null ? 0 : System.hashCode(addendumDescription));
        hashCode = (17 * hashCode) + (itemCode == null ? 0 : System.hashCode(itemCode));
        hashCode = (17 * hashCode) + (productCode == null ? 0 : System.hashCode(productCode));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (attribute1Name == null ? 0 : System.hashCode(attribute1Name));
        hashCode = (17 * hashCode) + (attribute1Value == null ? 0 : System.hashCode(attribute1Value));
        hashCode = (17 * hashCode) + (attribute2Name == null ? 0 : System.hashCode(attribute2Name));
        hashCode = (17 * hashCode) + (attribute2Value == null ? 0 : System.hashCode(attribute2Value));
        hashCode = (17 * hashCode) + (unitPrice == null ? 0 : System.hashCode(unitPrice));
        hashCode = (17 * hashCode) + (quantity == null ? 0 : System.hashCode(quantity));
        hashCode = (17 * hashCode) + (amount == null ? 0 : System.hashCode(amount));
        hashCode = (17 * hashCode) + (notes == null ? 0 : System.hashCode(notes));
        hashCode = (17 * hashCode) + (unitOfMeasureCode == null ? 0 : System.hashCode(unitOfMeasureCode));
        hashCode = (17 * hashCode) + (unitOfMeasureName == null ? 0 : System.hashCode(unitOfMeasureName));
        hashCode = (17 * hashCode) + (isIncluded == null ? 0 : System.hashCode(isIncluded));
        return hashCode;
    }
}